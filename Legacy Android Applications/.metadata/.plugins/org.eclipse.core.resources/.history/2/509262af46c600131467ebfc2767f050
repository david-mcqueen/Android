package co.uk.introapps.NinoMilano;

import java.util.Locale;

import FragmentHolder.FragmentLoyaltyHolder;
import FragmentHolder.FragmentPricesHolder;
import android.app.ActionBar;
import android.app.FragmentTransaction;
import android.content.pm.ActivityInfo;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.view.ViewPager;
import android.view.Menu;
import android.widget.Toast;
import co.uk.introapps.NinoMilano.Fragment.FragmentHome;
import co.uk.introapps.NinoMilano.Fragment.FragmentPrices;
import co.uk.introapps.NinoMilano.Fragment.FragmentTestimonials;

public class MainActivity extends FragmentActivity implements
		ActionBar.TabListener {
	
	public static final String NINO_PREFS = "NinoPrefs";
	private static final String TAG = "Nino-Main Activity";
	
	SectionsPagerAdapter mSectionsPagerAdapter;

	ViewPager mViewPager;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		
		setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);

		// Set up the action bar.
		final ActionBar actionBar = getActionBar();
		actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);

		mSectionsPagerAdapter = new SectionsPagerAdapter(
				getSupportFragmentManager());

		mViewPager = (ViewPager) findViewById(R.id.pager);
		mViewPager.setAdapter(mSectionsPagerAdapter);

		mViewPager.setOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener() {
					@Override
					public void onPageSelected(int position) {
						actionBar.setSelectedNavigationItem(position);
					}
				});

		// For each of the sections in the app, add a tab to the action bar.
		for (int i = 0; i < mSectionsPagerAdapter.getCount(); i++) {
			actionBar.addTab(actionBar.newTab()
					//.setText(mSectionsPagerAdapter.getPageTitle(i))
					.setIcon(mSectionsPagerAdapter.getPageImage(i))
					.setTabListener(this));
		}
		
		
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.settings, menu);
		return true;
	}

	@Override
	public void onTabSelected(ActionBar.Tab tab,
			FragmentTransaction fragmentTransaction) {
		// When the given tab is selected, switch to the corresponding page in
		// the ViewPager.
		mViewPager.setCurrentItem(tab.getPosition());
	}

	@Override
	public void onTabUnselected(ActionBar.Tab tab,
			FragmentTransaction fragmentTransaction) {
	}

	@Override
	public void onTabReselected(ActionBar.Tab tab,
			FragmentTransaction fragmentTransaction) {
	}

	public class SectionsPagerAdapter extends FragmentPagerAdapter {

		public SectionsPagerAdapter(FragmentManager fm) {
			super(fm);
		}

		@Override
		public Fragment getItem(int position) {
			Fragment fragment;
			Bundle args = new Bundle();
			switch (position){
			case 0:
				fragment = new FragmentHome();
				args.putInt(FragmentHome.ARG_SECTION_NUMBER, position);
				fragment.setArguments(args);
				return fragment;
			case 1:				
				fragment = new FragmentPricesHolder();
				args.putInt(FragmentPrices.ARG_SECTION_NUMBER, position);
				fragment.setArguments(args);
				return fragment;
			case 2:
				fragment = new FragmentLoyaltyHolder();
				args.putInt(FragmentLoyaltyHolder.ARG_SECTION_NUMBER, position);
				fragment.setArguments(args);
				return fragment;
			case 3:
				fragment = new FragmentTestimonials();
				args.putInt(FragmentTestimonials.ARG_SECTION_NUMBER, position);
				fragment.setArguments(args);
				return fragment;
			default:
				fragment = new FragmentHome();
				args.putInt(FragmentHome.ARG_SECTION_NUMBER, position);
				fragment.setArguments(args);
				return fragment;
			}
		}

		@Override
		public int getCount() {
			// How many tabs to show
			return 4;
		}
		
		//Get the title of each of the pages to be displayed
		@Override
		public CharSequence getPageTitle(int position) {
			Locale l = Locale.getDefault();
			switch (position) {
			case 0:
				return getString(R.string.title_Home).toUpperCase(l);
			case 1:
				return getString(R.string.title_Prices).toUpperCase(l);
			case 2:
				return getString(R.string.title_Loyalty).toUpperCase(l);
			case 3:
				return getString(R.string.title_Testimonials).toUpperCase(l);
			}
			return null;
		}
		
		public Drawable getPageImage(int position){
			Locale l = Locale.getDefault();
			switch (position) {
			case 0: //Homepage
				return getResources().getDrawable(R.drawable.fb_grey);
			case 1: //Prices
				return getResources().getDrawable(R.drawable.fb_grey);
			case 2: //Loyalty
				return getResources().getDrawable(R.drawable.fb_grey);
			case 3: //Testimonials
				return getResources().getDrawable(R.drawable.fb_grey);
			}
			return null;
		}
}
	
	public void displayToast (String message){
		Toast.makeText(getBaseContext(), message, Toast.LENGTH_SHORT).show();
	}
	
	public void onPause(){
		super.onPause();
	}
}
